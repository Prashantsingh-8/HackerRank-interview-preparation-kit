#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <list>
#include <queue>
#include <utility>
using namespace std;


int main() {
    int t;
    cin >> t;
    while(t--) {
        int n, m;
        cin >> n >> m;
        vector<list<int> > g(n);
        while(m--) {
            int a, b;
            cin >> a >> b;
            --a, --b;
            g[a].push_front(b);
            g[b].push_front(a);
        }
        int s;
        cin >> s;
        --s;
        vector<int> dist(n, -1);
        queue<pair<int, int> > q;
        q.push(make_pair(s, 0));
        while(!q.empty()) {
            pair<int, int> p = q.front();
            q.pop();
            if(dist[p.first] == -1) {
                dist[p.first] = p.second * 6;
                while(!g[p.first].empty()) {
                    q.push(make_pair(g[p.first].front(), p.second + 1));
                    g[p.first].pop_front();
                }
            }
        }
        for(int i=0; i<n; ++i)
            if(i != s)
                cout << dist[i] << (i == n-1 ? "\n" : " ");
    }
    return 0;
}
